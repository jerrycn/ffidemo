# This is a basic workflow to help you get started with Actions

name: Build Electron App


on:
  push:
    branches:
      - main  # 监听 main 分支的 push 事件
  pull_request:
    branches:
      - main  # 监听 main 分支的 PR 事件

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 环境来打包 EXE

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # 获取代码


      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 16  # 选择 Node.js 版本
          cache: 'npm'  # 缓存 npm 依赖

      - name: Install Dependencies
        run: npm ci  # 确保使用 package-lock.json 安装

        # 安装依赖并下载 ffi-napi
      - name: 安装 ffi-napi
        run: |
          npm install ffi-napi
          echo "ffi-napi 安装完成"

      - name: 安装 ref-napi
        run: |
          npm install ref-napi
          echo "ref-napi 安装完成"

      - name: Rebuild native modules
        run: npx electron-rebuild

      - name: Build Phaser Game
        run: npm run pack  # 运行构建脚本，确保 package.json 里有 "pack" 脚本

      # 检查 dist 目录内容，确认是否生成 EXE
      - name: Verify Build Output
        run: |
          echo "Checking dist directory..."
          dir dist  # 在 Windows 环境下列出 dist 目录内容
          if (-Not (Test-Path "dist\*.exe")) {
            Write-Host "Error: No EXE file found in dist!"
            exit 1
          }


      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v4  # 确保使用最新 v4 版本
        with:
          name: Phaser-Game-EXE
          path: dist/*.exe  # 确保 EXE 输出路径正确
          retention-days: 7  # 7 天后自动删除